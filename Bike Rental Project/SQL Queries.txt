-- To find the days when most trips started.
SELECT start_date, COUNT(*) FROM trip_data
GROUP BY start_date
ORDER BY 2 DESC
LIMIT 10;

-- To find the 	days when least trips started.
SELECT start_date, COUNT(*) FROM trip_data
GROUP BY start_date
ORDER BY 2 ASC
LIMIT 10;

-- To find days, their average temp (F), max temp (F), precipitation (inches), and average daily wind (mph) when most trips started.
SELECT t.start_date, COUNT(t.id), n.avg_temp_f, n.max_temp_f, n.precip_in, n.avg_daily_wind_mph FROM trip_data AS t
JOIN newark_wx AS n
ON t.start_date = n.date
GROUP BY 1, 3, 4, 5, 6
ORDER BY 2 DESC
LIMIT 10;

-- To find days, their average temp (F), max temp (F), precipitation (inches), snow accumulation (inches) and average daily wind (mph) when least trips started.
SELECT t.start_date, COUNT(t.id), n.avg_temp_f, n.max_temp_f, n.precip_in, n.snow_accum_in, n.avg_daily_wind_mph FROM trip_data AS t
JOIN newark_wx AS n
ON t.start_date = n.date
GROUP BY 1, 3, 4, 5, 6, 7
ORDER BY 2 ASC
LIMIT 10;

-- Gather count by user type.
SELECT user_type, COUNT(*) FROM trip_data
GROUP BY 1
ORDER BY 2 DESC;

-- Gather count by gender.
SELECT gender, COUNT(*) FROM trip_data
GROUP BY 1
ORDER BY 2 DESC;

-- Most popular starting stations.
SELECT s.station_name, t.start_station_id, s.station_lat, s.station_long, COUNT(*) FROM trip_data AS t
JOIN stations AS s
ON t.start_station_id = s.station_id
GROUP BY 1, 2, 3, 4
ORDER BY 5 DESC
LIMIT 10;

-- Least popular starting stations.
SELECT s.station_name, t.start_station_id, s.station_lat, s.station_long, COUNT(*) FROM trip_data AS t
JOIN stations AS s
ON t.start_station_id = s.station_id
GROUP BY 1, 2, 3, 4
ORDER BY 5 ASC
LIMIT 10;

-- Most popular bike IDs.
SELECT bike_id, COUNT(*) FROM trip_data
GROUP BY 1
ORDER BY 2 DESC
LIMIT 10;

== Least popular bike IDs.
SELECT bike_id, COUNT(*) FROM trip_data
GROUP BY 1
ORDER BY 2 ASC
LIMIT 10;